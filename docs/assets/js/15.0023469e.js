(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{364:function(t,e,a){"use strict";a.r(e);var r=a(42),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"initializers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initializers"}},[t._v("#")]),t._v(" Initializers")]),t._v(" "),a("h2",{attrs:{id:"initcorevariables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initcorevariables"}},[t._v("#")]),t._v(" initCoreVariables")]),t._v(" "),a("div",{staticClass:"language-MATLAB extra-class"},[a("pre",{pre:!0,attrs:{class:"language-matlab"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("environment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mcmc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initCoreVariables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Initializes the core variables (i.e., "),a("strong",[t._v("environment")]),t._v(", "),a("strong",[t._v("model")]),t._v(", "),a("strong",[t._v("mcmc")]),t._v(", and "),a("strong",[t._v("dss")]),t._v(") of ReplayBG.")]),t._v(" "),a("h3",{attrs:{id:"inputs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inputs"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("data: timetable (required)")]),t._v(" "),a("br"),t._v("\nA timetable which contains the data to be used by the tool;")]),t._v(" "),a("li",[a("strong",[t._v("ip: InputParser (required)")]),t._v(" "),a("br"),t._v("\nThe MATLABÂ® input parser.")])]),t._v(" "),a("h3",{attrs:{id:"outputs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outputs"}},[t._v("#")]),t._v(" Outputs")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("environment: structure")]),t._v(" "),a("br"),t._v("\nA structure that contains general parameters to be used by ReplayBG;")]),t._v(" "),a("li",[a("strong",[t._v("model: structure")]),t._v(" "),a("br"),t._v("\nA structure that contains general parameters of the physiological model;")]),t._v(" "),a("li",[a("strong",[t._v("mcmc: structure")]),t._v(" "),a("br"),t._v("\nA structure that contains the hyperparameters of the MCMC identification procedure;")]),t._v(" "),a("li",[a("strong",[t._v("dss: structure")]),t._v(" "),a("br"),t._v("\nA structure that contains the hyperparameters of the integrated\ndecision support system.")])]),t._v(" "),a("h2",{attrs:{id:"initenvironment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initenvironment"}},[t._v("#")]),t._v(" initEnvironment")]),t._v(" "),a("div",{staticClass:"language-MATLAB extra-class"},[a("pre",{pre:!0,attrs:{class:"language-matlab"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" environment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initEnvironment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modality"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" saveName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" saveSuffix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" plotMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" enableLog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" verbose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Initializes the "),a("strong",[t._v("environment")]),t._v(" core variable.")]),t._v(" "),a("h3",{attrs:{id:"inputs-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inputs-2"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("modality: vector of char (required)")]),t._v(" "),a("br"),t._v("\nA vector of characters that specifies if the function will be used to identify the ReplayBG model on the given data or to replay the scenario specified by the given data;")]),t._v(" "),a("li",[a("strong",[t._v("saveName: vector of char (required)")]),t._v(" "),a("br"),t._v("\nA vector of characters used to label, thus identify, each output file and result;")]),t._v(" "),a("li",[a("strong",[t._v("saveSuffix: vecotr of char (required)")]),t._v(" "),a("br"),t._v("\nA vector of characters to be attached as suffix to the resulting output files' name;")]),t._v(" "),a("li",[a("strong",[t._v("plotMode: integer (required)")]),t._v(" "),a("br"),t._v("\nA numerical flag that specifies whether to show the plot of the results or not;")]),t._v(" "),a("li",[a("strong",[t._v("enableLog: integer (required)")]),t._v(" "),a("br"),t._v("\nA numerical flag that specifies whether to log the output of ReplayBG not;")]),t._v(" "),a("li",[a("strong",[t._v("verbose: integer (required)")]),t._v(" "),a("br"),t._v("\nA numerical flag that specifies the verbosity of ReplayBG.")])]),t._v(" "),a("h3",{attrs:{id:"output"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output"}},[t._v("#")]),t._v(" Output")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("environment: structure")]),t._v(" "),a("br"),t._v("\nA structure that contains general parameters to be used by ReplayBG.")])]),t._v(" "),a("h2",{attrs:{id:"initmodel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initmodel"}},[t._v("#")]),t._v(" initModel")]),t._v(" "),a("div",{staticClass:"language-MATLAB extra-class"},[a("pre",{pre:!0,attrs:{class:"language-matlab"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" model "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initModel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sampleTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" glucoseModel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" seed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Initializes the "),a("strong",[t._v("model")]),t._v(" core variable.")]),t._v(" "),a("h3",{attrs:{id:"inputs-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inputs-3"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("data: timetable (required)")]),t._v(" "),a("br"),t._v("\nA timetable which contains the data to be used by the tool;")]),t._v(" "),a("li",[a("strong",[t._v("sampleTime: integer (required)")]),t._v(" "),a("br"),t._v("\nAn integer that specifies the sample time of the "),a("strong",[t._v("data")]),t._v(" timetable;")]),t._v(" "),a("li",[a("strong",[t._v("glucoseModel: vector of char (required)")]),t._v(" "),a("br"),t._v("\nA vector of characters that specifies the glucose model to use;")]),t._v(" "),a("li",[a("strong",[t._v("seed: integer (required)")]),t._v(" "),a("br"),t._v("\nAn integer that specifies the random seed. For reproducibility.")])]),t._v(" "),a("h3",{attrs:{id:"output-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-2"}},[t._v("#")]),t._v(" Output")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("model: structure")]),t._v(" "),a("br"),t._v("\nA structure that contains general parameters of the physiological model.")])]),t._v(" "),a("h2",{attrs:{id:"initmarkovchainmontecarlo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initmarkovchainmontecarlo"}},[t._v("#")]),t._v(" initMarkovChainMonteCarlo")]),t._v(" "),a("div",{staticClass:"language-MATLAB extra-class"},[a("pre",{pre:!0,attrs:{class:"language-matlab"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" mcmc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initMarkovChainMonteCarlo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxETAPerMCMCRun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("maxMCMCIterations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("maxMCMCRuns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" maxMCMCRunsWithMaxETA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MCMCTheta0Policy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bayesianEstimator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("preFilterData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" saveChains"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" adaptiveSCMH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Initializes the "),a("strong",[t._v("mcmc")]),t._v(" core variable.")]),t._v(" "),a("h3",{attrs:{id:"inputs-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inputs-4"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("maxETAPerMCMCRun: double (required)")]),t._v(" "),a("br"),t._v("\nA number that specifies the maximum time in hours allowed for each MCMC run;")]),t._v(" "),a("li",[a("strong",[t._v("maxMCMCIterations: integer (required)")]),t._v(" "),a("br"),t._v("\nAn integer that specifies the maximum number of iterations for each MCMC run;")]),t._v(" "),a("li",[a("strong",[t._v("maxMCMCRuns: integer (required)")]),t._v(" "),a("br"),t._v("\nAn integer that specifies the maximum number of MCMC runs;")]),t._v(" "),a("li",[a("strong",[t._v("maxMCMCRunsWithMaxETA: integer (required)")]),t._v(" "),a("br"),t._v("\nAn integer that specifies the maximum number of MCMC runs having maximum ETA;")]),t._v(" "),a("li",[a("strong",[t._v("MCMCTheta0Policy: vectro of char (required)")]),t._v(" "),a("br"),t._v("\nA vector of characters defining the policy used by the MCMC procedure to set the initial MCMC chains values;")]),t._v(" "),a("li",[a("strong",[t._v("bayesianEstimator: vector of char (required)")]),t._v(" "),a("br"),t._v("\nA vector of characters defining which Bayesian estimator to use to obtain a point estimate of model parameters;")]),t._v(" "),a("li",[a("strong",[t._v("preFilterData: integer (required)")]),t._v(" "),a("br"),t._v("\nA numerical flag that specifies whether to filter the glucose data before performing the model identification;")]),t._v(" "),a("li",[a("strong",[t._v("saveChains: integer (required)")]),t._v(" "),a("br"),t._v("\nA numerical flag that specifies whether to save the resulting mcmc chains in dedicated files (one for each MCMC run) for future analysis or not;")]),t._v(" "),a("li",[a("strong",[t._v("adaptiveSCMH: integer (required)")]),t._v(" "),a("br"),t._v("\nA numerical flag that specifies whether to make the Single Components Metropolis Hastings algorithm adaptive or non-adaptive.")])]),t._v(" "),a("h3",{attrs:{id:"output-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-3"}},[t._v("#")]),t._v(" Output")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("mcmc: structure")]),t._v(" "),a("br"),t._v("\nA structure that contains the hyperparameters of the MCMC identification procedure.")])]),t._v(" "),a("h2",{attrs:{id:"initdecisionsupportsystem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initdecisionsupportsystem"}},[t._v("#")]),t._v(" initDecisionSupportSystem")]),t._v(" "),a("div",{staticClass:"language-MATLAB extra-class"},[a("pre",{pre:!0,attrs:{class:"language-matlab"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" dss "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initDecisionSupportSystem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("enableHypoTreatments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("hypoTreatmentsHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("enableCorrectionBoluses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("correctionBolusesHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Initializes the "),a("strong",[t._v("dss")]),t._v(" core variable.")]),t._v(" "),a("h3",{attrs:{id:"inputs-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inputs-5"}},[t._v("#")]),t._v(" Inputs")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("enableHypoTreatments: integer (required)")]),t._v(" "),a("br"),t._v("\nA numerical flag that specifies whether to enable hypotreatments during the replay of a given scenario;")]),t._v(" "),a("li",[a("strong",[t._v("hypoTreatmentsHandler: vector of char (required)")]),t._v(" "),a("br"),t._v("\nA vector of characters that specifies the name of the function handler that implements an hypotreatment strategy during the replay of a given scenario;")]),t._v(" "),a("li",[a("strong",[t._v("enableCorrectionBoluses: integer (required)")]),t._v(" "),a("br"),t._v("\nA numerical flag that specifies whether to enable correction boluses during the replay of a given scenario;")]),t._v(" "),a("li",[a("strong",[t._v("correctionBolusesHandler: vector of char (required)")]),t._v(" "),a("br"),t._v("\nA vector of characters that specifies the name of the function handler that implements a corrective bolusing strategy during the replay of a given scenario.")])]),t._v(" "),a("h3",{attrs:{id:"output-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-4"}},[t._v("#")]),t._v(" Output")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("dss: structure")]),t._v(" "),a("br"),t._v("\nA structure that contains the hyperparameters of the integrated\ndecision support system.")])])])}),[],!1,null,null,null);e.default=s.exports}}]);